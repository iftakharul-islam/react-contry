{"version":3,"sources":["components/countries.js","App.js","reportWebVitals.js","index.js"],"names":["Countries","props","style","margin","padding","flexGrow","boxShadow","minWidth","src","image","alt","width","name","region","population","capital","App","useState","countries","setCountries","useEffect","fetch","then","res","json","data","console","log","className","display","flexDirection","flexWrap","map","ctr","common","flags","png","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAuBeA,MApBf,SAAmBC,GAKf,OACI,qBAAKC,MAAO,CAACC,OAAO,YAAYC,QAAQ,QAAQC,SAAS,IAAIC,UAAU,mBAAmBC,SAAS,SAAnG,SACI,gCACI,qBAAKC,IAAKP,EAAMQ,MACfC,IAAI,GACJR,MAAO,CAACS,MAAM,UAEf,yCAAYV,EAAMW,QAClB,2CAAcX,EAAMY,UACpB,+CAAkBZ,EAAMa,cACxB,4CAAeb,EAAMc,iBCwDtBC,MAnEf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAOA,OANAC,qBAAU,WACRC,MAAM,gDACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAAaM,QAC5B,IACHC,QAAQC,IAAIT,GAEV,qBAAKU,UAAU,MAAf,SAEE,qBAAK1B,MAAO,CACV2B,QAAS,OACTC,cAAe,MACfC,SAAU,QAHZ,SAKGb,EAAUc,KAAI,SAAAC,GAAG,OAChB,cAAC,EAAD,CACElB,QAASkB,EAAIlB,QAAQ,GACrBD,WAAYmB,EAAInB,WAChBD,OAAQoB,EAAIpB,OACZD,KAAMqB,EAAIrB,KAAKsB,OACfzB,MAAOwB,EAAIE,MAAMC,cCjBdC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.01322bc2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction Countries(props) {\r\n\r\n    function addCss(){\r\n            \r\n    }\r\n    return (\r\n        <div style={{margin:\"2rem 1rem\",padding:\".8rem\",flexGrow:'1',boxShadow:\"3px 4px 8px gray\",minWidth:\"250px\"}}>\r\n            <div>\r\n                <img src={props.image}\r\n                 alt=\"\"\r\n                 style={{width:\"100%\"}} \r\n                 />\r\n                <h2>Name : {props.name}</h2>\r\n                <h3>Region : {props.region}</h3>\r\n                <h3>Population : {props.population}</h3>\r\n                <h3>Capital : {props.capital}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Countries","\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Countries from \"./components/countries\";\n\n\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetch(\"https://restcountries.com/v3.1/region/europe\")\n      .then(res => res.json())\n      .then(data => setCountries(data))\n  }, [])\n  console.log(countries)\n  return (\n    <div className=\"App\">\n\n      <div style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: \"wrap\"\n      }}>\n        {countries.map(ctr =>\n          <Countries\n            capital={ctr.capital[0]}\n            population={ctr.population}\n            region={ctr.region}\n            name={ctr.name.common}\n            image={ctr.flags.png}\n          ></Countries>)}\n      </div>\n    </div>\n  );\n}\nfunction Users() {\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => res.json())\n      .then(data => setUsers(data))\n  }, []);\n  return (\n    <div>\n      <h2>Dynamic Users : {(users.length)}</h2>\n      <div style={{ marginTop: \"15px\" }}>\n        {users.map(value => <li key={value.id}>{value.name}</li>)}\n      </div>\n    </div>\n  )\n}\nfunction MovieCounter() {\n  let [count, setCount] = useState(1);\n  function increase() {\n    setCount(count + 1)\n  }\n  return (\n    <div style={{ border: \"1px solid red\", margin: \"1rem 0\", padding: \"1rem\" }}>\n      <h2>Movie Counter : {count}</h2>\n      <MovieActed movies={count}></MovieActed>\n      <button onClick={increase} style={{ padding: \"1rem\" }}>Counter ++</button>\n    </div>\n  )\n}\n\nfunction MovieActed(props) {\n  return (\n    <h2>Movie Acted on : {props.movies}</h2>\n  )\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}